5-1
1. 다음 클래스들을 상속 이용해 계층관계로 구성
 -> class MobilePhone <- class MusicPhone (화살표가 향하는 방향이 상속하는(부모) 클래스)

2. '튜티 지도' 기능을 가진 튜터 학생을 Tutor 클래스로 작성하고, '사무 보기' 기능을 가진
   행정 직원을 Staff 클래스로 작성 > 클래스 계층 구조는? 상속의 어떤 장점?
 -> Person < Student < Tutor
                     < StudentWorker
           < Staff
    소프트웨어 생산성 향상(클래스 재사용 및 확장 용이)

--------------------------------------------------------------
5-2
1. 자바에서 상속 선언 키워드?
 -> extends

2. 슈퍼 클래스가 없는 유일한 클래스
 -> java.lang.Object

3. 서브 클래스에서 슈퍼 클래스의 private 멤버 접근 가능?
 -> 불가능

--------------------------------------------------------------
5-3
1. 서브 클래스와 슈퍼 클래스가 같은 패키지에 존재, 슈퍼 클래스 멤버의 어떤 접근 지정자 > 서브 클래스 접근 불가?
 -> private

2. 서브 슈퍼 서로 다른 패키지, 슈퍼 멤버 어떤 접근 지정자 > 서브에서 접근 가능?
 -> protected, public

--------------------------------------------------------------
5-4
1. 서브 생성자에서 슈퍼 생성자 호출 시 사용하는 키워드
 -> super()

2. 아래 코드 실행시 결과
 -> 매개변수생성자A30
    생성자B

3. 서브 생성자 코드에서 잘못된 부분
 -> super()가 첫 라인에 있지 않다

--------------------------------------------------------------
5-5
1. 다음 문장 중 틀린 부분
 -> if (a instanceof b) 에서 b가 아닌 클래스명인 B가 와야한다

2. 다음 그림과 같은 클래스 계층구조에서, instanceof 결과가 false 인 것?
 -> 4번 '(new A()) instanceof D'

--------------------------------------------------------------
5-6
1. private 메소드는 오버라이딩 가능?
 -> 불가능

2. 다음은 오버로딩, 오버라이딩, 컴파일 오류?
 -> 오버로딩

3. 다음 실행결과 출력결과?
 -> Sub Object
    Super Object

4. 함수 수정 > 뭐가 출력?
 -> 위와 같다

--------------------------------------------------------------
5-7
1. 다음 코드에서 틀린 부분 수정
1) class A {
    abstract void f();  // abstract 추가
}
2) abstract class B extends A { } // abstract 추가
// 오답: 틀린부분 x || f()가 추상 메소드가 아니므로 서브 클래스가 추상 클래스일 필요 없음

3) A a = new A(); 삭제

2. 추상 클래스 객체 생성 가능?
 -> 불가능

--------------------------------------------------------------
5-8
1. 자바 인터페이스 객체 생성 가능?
 -> 불가능

2. 인터페이스 구현 시 사용 키워드
 -> 1번 'implements'

3. 다음 인터페이스 선언에서 틀린 부분
 -> protected 지정 불가, static 메소드 코드 내용 있어야 함 // + int VERSION 불가 인터페이스는 필드 못 가짐